tosca_definitions_version: tosca_simple_profile_for_nfv_1_0_0

description: VNF TOSCA template with reservation_id input parameters.

imports:
  - translator/tests/data/nfv/tacker_defs.yaml
  - translator/tests/data/nfv/tacker_nfv_defs.yaml

topology_template:
  inputs:
    flavor:
      type: string
      description: Flavor Information

    lease_id:
      type: string
      description: lease id

  node_templates:
    VDU1:
      type: tosca.nodes.nfv.VDU.Tacker
      properties:
        image: cirros-0.4.0-x86_64-disk
        flavor: { get_input: flavor }

    CP1:
      type: tosca.nodes.nfv.CP.Tacker
      properties:
        management: true
        order: 0
        anti_spoofing_protection: false
      requirements:
        - virtualLink:
            node: VL1
        - virtualBinding:
            node: VDU1
    VL1:
      type: tosca.nodes.nfv.VL
      properties:
        network_name: net_mgmt
        vendor: Tacker

  policies:
    - RSV:
        type: tosca.policies.tacker.Reservation
        reservation:
          start_actions: [SP_RSV]
          before_end_actions: [SP_RSV]
          end_actions: [noop]
          properties:
            lease_id: { get_input: lease_id }
    - SP_RSV:
        type: tosca.policies.tacker.Scaling
        properties:
          increment: 2
          cooldown: 120
          min_instances: 0
          max_instances: 3
          default_instances: 0
          targets: [VDU1]
